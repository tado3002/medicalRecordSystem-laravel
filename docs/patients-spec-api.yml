openapi: "3.0.3"
info:
  title: Docter Specialization API
  description: dokumentasi API untuk memanajamen data pasien
  version: "1.0"
servers:
  - url: http://localhost:8000/api

security:
  - bearerAuth: []

paths:
  /patients:
    post:
      requestBody:
        content:
          application/json:
            example:
              name: Jokowee
              nik: "3514203109203330"
              gender: male
              birthday: 1972/04/01
              address: solo, jawa tengah
              phone: "083238082323"
              emergency_phone: "081238082323"
            schema:
              required:
                - name
                - nik
                - gender
                - birthday
                - address
                - phone
                - emergency_phone
              $ref: "#/components/schemas/RequestBody"
      responses:
        "201":
          description: Berhasil menambahkan data patient
          content:
            application/json:
              example:
                success: true
                message: Berhasil menambahkan data!
                data:
                  id: 1
                  name: Jokowee
                  nik: "3514203109203330"
                  gender: "male"
                  birthday: "1972/04/01"
                  address: "solo, jawa tengah"
                  phone: "083238082323"
                  emergency_phone: "081238082323"

                errors: null

              schema:
                $ref: "#/components/schemas/Response"
        "422":
          description: Invalid request error karena request body tidak valid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
              example:
                success: false
                message: "User request tidak valid!"
                data: null
                errors:
                  code: "INVALID_REQUEST"
                  details:
                    name:
                      - "The name field is required."
                    nik:
                      - "The nik field is required."
                    birthday:
                      - "The birthday field is required."
                    gender:
                      - "The gender field is required."
                    address:
                      - "The address field is required."
                    phone:
                      - "The phone field is required."
                    emergency_phone:
                      - "The emergency phone field is required."

        "401":
          description: Uauthorized error karena token tidak valid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
              example:
                success: false
                message: "Unauthenticated!"
                data: null
                errors:
                  code: "UNAUTHORIZED"
                  details: null

  /patients/{id}:
    get:
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: integer
            default: 1
            minimum: 1
          description: Data pasien berdasarkan id.

      responses:
        "200":
          description: Data pasien yang berhasil ditemukan
          content:
            application/json:
              example:
                success: true
                message: Berhasil mendapatkan data!
                data:
                  id: 1
                  name: Jokowee
                  nik: "3514203109203330"
                  gender: "male"
                  birthday: "1972/04/01"
                  address: "solo, jawa tengah"
                  phone: "083238082323"
                  emergency_phone: "081238082323"
                errors: null
              schema:
                $ref: "#/components/schemas/ResponsePaginate"
        "404":
          description: Not found error karena parameter pasien id tidak ditemukan
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
              example:
                success: false
                message: "Patient tidak ditemukan!"
                data: null
                errors:
                  code: "NOT_FOUND"
                  details: null
    put:
      parameters:
        - in: query
          name: id
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Id patient yang akan diupdate

      requestBody:
        content:
          application/json:
            example:
              address: "pasuruan, jawa timur"
              phone: "083238082324"
            schema:
              $ref: "#/components/schemas/RequestBody"
      responses:
        "200":
          description: Berhasil mengupdate data patient
          content:
            application/json:
              example:
                success: true
                message: Berhasil mengupdate data!
                data:
                  id: 1
                  name: Jokowee
                  nik: "3514203109203330"
                  gender: "male"
                  birthday: "1972/04/01"
                  address: "pasuruan, jawa timur"
                  phone: "083238082324"
                  emergency_phone: "081238082323"

              schema:
                $ref: "#/components/schemas/Response"
        "422":
          description: Invalid request error karena request body tidak valid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
              example:
                success: false
                message: "User request tidak valid!"
                data: null
                errors:
                  code: "INVALID_REQUEST"
                  details:
                    address:
                      - "The address field is required."
                    phone:
                      - "The phone field is required."
        "401":
          description: Uauthorized error karena token tidak valid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
              example:
                success: false
                message: "Unauthenticated!"
                data: null
                errors:
                  code: "UNAUTHORIZED"
                  details: null
        "404":
          description: Not found error karena parameter pasien id tidak ditemukan
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
              example:
                success: false
                message: "Patient tidak ditemukan!"
                data: null
                errors:
                  code: "NOT_FOUND"
                  details: null
    delete:
      parameters:
        - in: query
          name: id
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Id patient yang ingin dihapus
      responses:
        "200":
          description: Berhasil menghapus data patient
          content:
            application/json:
              example:
                success: true
                message: Berhasil menghapus data!
                data:
                  id: 1
                  name: Jokowee
                  nik: "3514203109203330"
                  gender: "male"
                  birthday: "1972/04/01"
                  address: "pasuruan, jawa timur"
                  phone: "083238082324"
                  emergency_phone: "081238082323"
                errors: null
              schema:
                $ref: "#/components/schemas/Response"

        "401":
          description: Uauthorized error karena token tidak valid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
              example:
                success: false
                message: "Unauthenticated!"
                data: null
                errors:
                  code: "UNAUTHORIZED"
                  details: null
        "404":
          description: Not found error karena patient id di parameter tidak ditemukan
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
              example:
                success: false
                message: "Data tidak ditemukan!"
                data: null
                errors:
                  code: "NOT_FOUND"
                  details: null
  /patients/search:
    get:
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
            minimum: 1
          description: Halaman hasil yang ingin diambil.
        - in: query
          name: size
          schema:
            type: integer
            default: 10
            minimum: 1
          description: Jumlah data per halaman.
        - in: query
          name: name
          schema:
            type: string
          required: false
          description: Nama pasien yang ingin dicari (opsional).

      responses:
        "200":
          description: Daftar pasien yang berhasil ditemukan
          content:
            application/json:
              example:
                success: true
                message: Berhasil mendapatkan data!
                data:
                  items:
                    - id: 1
                      name: Jokowee
                      nik: "3514203109203330"
                      gender: "male"
                      birthday: "1972/04/01"
                      address: "solo, jawa tengah"
                      phone: "083238082323"
                      emergency_phone: "081238082323"
                  page:
                    total: 1
                    per_page: 10
                    current_page: 1
                    total_page: 1
                    links:
                      first: http://localhost:8000/api/patients/search?page=1
                      last: http://localhost:8000/api/patients/search?page=1
                      prev: null
                      next: null

                errors: null
              schema:
                $ref: "#/components/schemas/ResponsePaginate"

components:
  schemas:
    RequestBody:
      type: object
      properties:
        name:
          type: string
        nik:
          type: string
        birthday:
          type: string
          format: date
        address:
          type: string
        gender:
          type: string
          enum:
            - male
            - female
        phone:
          type: string
        emergency_phone:
          type: string

    Patient:
      type: object
      properties:
        id:
          type: integer
          uniqueItems: true
        name:
          type: string
        nik:
          type: string
        birthday:
          type: string
          format: date
        address:
          type: string
        gender:
          type: string
          enum:
            - male
            - female
        phone:
          type: string
        emergency_phone:
          type: string

    Response:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          nullable: true
          $ref: "#/components/schemas/Patient"
        errors:
          type: object
          nullable: true
          properties:
            code:
              type: string
            details:
              type: object
              properties:
                field:
                  type: array
    ResponsePaginate:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          type: object
          properties:
            items:
              type: array
              items:
                $ref: "#/components/schemas/Patient"
            page:
              type: object
              properties:
                total:
                  type: integer
                per_page:
                  type: integer
                current_page:
                  type: integer
                total_page:
                  type: integer
                links:
                  type: object
                  properties:
                    first:
                      type: string
                      nullable: true
                    last:
                      type: string
                      nullable: true
                    prev:
                      type: string
                      nullable: true
                    next:
                      type: string
                      nullable: true

        errors:
          type: object
          nullable: true
          properties:
            code:
              type: string
            details:
              type: object
              properties:
                field:
                  type: array

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
